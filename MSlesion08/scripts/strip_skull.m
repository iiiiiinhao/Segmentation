%% A script for automated skull stripping on the MS lesion 08 data.
% Input: 
%   full scan in .nhdr format, for example:
%    UNC_train_Case01_FLAIR.nhdr  UNC_train_Case01_FLAIR.raw
%    UNC_train_Case01_lesion.nhdr UNC_train_Case01_lesion.raw
% Output: skull stripped images in 
%      skull_stripped_UNC_train_Case01/UNC_train_Case01_FLAIR_s.nhdr
%      skull_stripped_UNC_train_Case01/UNC_train_Case01_FLAIR_s_mask.nhdr

% Set FSL environment 
fsldr = '/usr/work/share/fsl'; 
setenv('FSLDIR', fsldr); 
setenv('FSLOUTPUTTYPE', 'NIFTI');

% Example of BET2: 
% /usr/work/share/fsl/bin/bet2 UNC_train_Case01_T2_original.nii.gz
% UNC_train_Case01_T2_output -m -v
% Arguments:
% “UNC_train_Case01_T2_original.nii.gz” is the input scan, 
% “UNC_train_Case01_T2_output” is the output file without the extension,
% -m : option to generate a mask (1 for brain tissue, 0 otherwise)
% Output: 
% UNC_train_Case01_T2_output_mask.nii.gz (the mask generated by -m)
% UNC_train_Case01_T2_output.nii.gz

% Directory to keep the processed images
base_dir = '/usr/data/medical_images/MSlesion08/';
ss_base_dir = [base_dir, 'skull_stripped_'];
tmp_dir = [base_dir, 'tmpscan/'];
if ~exist(tmp_dir, 'dir')
    mkdir(tmp_dir);
end
dUNC = dir([base_dir,'UNC*']); % For the UNC data
dCHB = dir([base_dir,'CHB*']); % For the CHB data
d=[dUNC; dCHB];
list_dir = {d.name}; % a list of the directories

% Commands of programs
c3d_command = '/usr/work/share/convert3D/bin/c3d ';
bet2_command = '/usr/work/share/fsl/bin/bet2 ';

tic
for dir_index=1:length(list_dir)
    dir_name = [list_dir{dir_index}, '/'];
    source_dir=[base_dir, dir_name];
    ss_dir = [ss_base_dir, dir_name];
    if ~exist(ss_dir, 'dir')
        mkdir(ss_dir); % mkdir for skull stripped scan
    end
    inputf = dir([source_dir '*.nhdr']); % get the names of all the input files
    list_inputf = {inputf.name};
    % loop through all files in this directory;
    % should ignore the lesion files, since it does not apply and also causes
    % segmentation result on bet2 program
    for f_ind=1:length(list_inputf)
        src_file = [source_dir, list_inputf{f_ind}]; % get the filename with full path
        [~,name,~] = fileparts(src_file); % get the filename w/o extention
        target_file = [tmp_dir, name, '.nii']; % get the name of the target file
        if regexp(name,'.*lesion.*','ignorecase')
            continue % jump to the next iteration if it's lesion
        end
        % First step, convert all images to NIFTI
        % Loop through all the nhdr files in all directories,
        % convert them to .nii files
        try
            system([c3d_command, src_file, ' -o ', target_file]);
        catch
            error('Error Occured when running c3d on %s\n',src_file);
        end
        % Second step, strip the skull using BET2
        % run bet2 on the .nii images
        target_ss_file = [ss_dir, name, '_s']; % target skull stripped file
        try
            system([bet2_command, target_file, ' ', target_ss_file, ' -m']);
        catch
            error('Error Occured when running bet2 on %s\n',target_file);
        end
        % Third step, convert file format to nhdr
        source_ss_scan = [target_ss_file, '.nii'];
        source_ss_mask = [target_ss_file, '_mask.nii'];
        target_ss_scan = [target_ss_file, '.nhdr'];
        target_ss_mask = [target_ss_file, '_mask.nhdr'];
        try
            system([c3d_command, source_ss_scan, ' -o ', target_ss_scan]);
            system([c3d_command, source_ss_mask, ' -o ', target_ss_mask]);
        catch
            error('Error Occured when running c3d on %s*\n',target_ss_file);
        end
        % Delete the temporary .nii files
        % including
        % the .nii in tmpscan/, and the two skull stripped .nii files
        delete(target_file, source_ss_scan, source_ss_mask);
    end
end
% clean up the tmp directory
if exist(tmp_dir, 'dir')
    rmdir(tmp_dir);
end
toc